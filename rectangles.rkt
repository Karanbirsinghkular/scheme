#lang sicp
(define (print-point p)
(newline)
(display "(")
(display (x-point p))
(display ",")(display (y-point p))
(display ")"))

(define (make-point x y)
  (cons x y))
(define (x-point point)
  (car point))
(define (y-point point)
  (cdr point))

(define (make-rectvialb x l b)
  (cons x (cons (+ (x-point x) l)
                (+ (y-point x) b))))
(define (make-rectvia2p sp ep)
  (cons sp ep))
(define (rectl rect)
  (abs(- (x-point (car rect)) (x-point (cdr rect)))))
(define (rectb rect)
  (abs(- (y-point (car rect)) (y-point (cdr rect)))))

(define (peri rect)
  (* 2 (+ (rectl rect)
          (rectb rect))))
(define (area rect)
  (* (rectl rect)
     (rectb rect)))
(define sp (make-point 2 3))
(define ep (make-point 7 9))
(define rect (make-rectvia2p sp ep))
(peri rect)

